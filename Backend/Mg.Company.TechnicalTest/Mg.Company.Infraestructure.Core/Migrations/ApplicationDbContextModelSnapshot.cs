// <auto-generated />
using Mg.Company.Infraestructure.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mg.Company.Infraestructure.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mg.Company.Infraestructure.Core.Entities.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("ContractTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Salario Mensual"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Salario Por Hora"
                        });
                });

            modelBuilder.Entity("Mg.Company.Infraestructure.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("SalaryValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecondSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ContractTypeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ContractTypeId = 1,
                            Document = "12345688",
                            FirstName = "Yesion",
                            SalaryValue = 1250000m,
                            SecondSurname = "Acevedo",
                            Surname = "Rojo"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ContractTypeId = 1,
                            Document = "89384937",
                            FirstName = "Jesus",
                            SalaryValue = 1050000m,
                            SecondSurname = "Suarez",
                            Surname = "Estiven"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            ContractTypeId = 1,
                            Document = "32489703",
                            FirstName = "Maria",
                            SalaryValue = 1000000m,
                            SecondSurname = "Hernandez",
                            Surname = "Lopera"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            ContractTypeId = 1,
                            Document = "20930323",
                            FirstName = "Daniel",
                            SalaryValue = 978500m,
                            SecondSurname = "Acevedo",
                            Surname = "Alvarez"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            ContractTypeId = 1,
                            Document = "102930293",
                            FirstName = "Gabriel",
                            SalaryValue = 2325000m,
                            SecondSurname = "Villa",
                            Surname = "Alvarez"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            ContractTypeId = 2,
                            Document = "192839748",
                            FirstName = "Maria",
                            SalaryValue = 18720m,
                            SecondSurname = "Agudelo",
                            Surname = "Fernanda"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            ContractTypeId = 2,
                            Document = "28309282",
                            FirstName = "Carlos",
                            SalaryValue = 20000m,
                            SecondSurname = "Granada",
                            Surname = "Villa"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            ContractTypeId = 2,
                            Document = "73829320",
                            FirstName = "Angela",
                            SalaryValue = 12500m,
                            SecondSurname = "Rivera",
                            Surname = "Pelaez"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            ContractTypeId = 2,
                            Document = "128982287",
                            FirstName = "Mateo",
                            SalaryValue = 9876m,
                            SecondSurname = "Henao",
                            Surname = "Henao"
                        });
                });

            modelBuilder.Entity("Mg.Company.Infraestructure.Core.Entities.Employee", b =>
                {
                    b.HasOne("Mg.Company.Infraestructure.Core.Entities.ContractType", "ContractType")
                        .WithMany("Employees")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
